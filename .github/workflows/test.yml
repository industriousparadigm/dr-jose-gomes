name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run unit tests
      run: npm run test:ci
      env:
        NEXT_PUBLIC_SITE_URL: http://localhost:3000
        NEXT_PUBLIC_GOAL_AMOUNT: 25000
        STRIPE_SECRET_KEY: sk_test_mock
        STRIPE_WEBHOOK_SECRET: whsec_mock
        POSTGRES_URL: postgres://test:test@localhost:5432/test
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  e2e-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npm run test:setup
    
    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_SITE_URL: http://localhost:3000
        NEXT_PUBLIC_GOAL_AMOUNT: 25000
        NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: pk_test_mock
        STRIPE_SECRET_KEY: sk_test_mock
        POSTGRES_URL: postgres://test:test@localhost:5432/test
    
    - name: Run E2E tests
      run: npm run test:e2e
      env:
        NEXT_PUBLIC_SITE_URL: http://localhost:3000
        NEXT_PUBLIC_GOAL_AMOUNT: 25000
        NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: pk_test_mock
        STRIPE_SECRET_KEY: sk_test_mock
        POSTGRES_URL: postgres://test:test@localhost:5432/test
    
    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level high
    
    - name: Run dependency check
      run: npx audit-ci --moderate

  build-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Test build
      run: npm run build
      env:
        NEXT_PUBLIC_SITE_URL: http://localhost:3000
        NEXT_PUBLIC_GOAL_AMOUNT: 25000
        NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: pk_test_mock
        STRIPE_SECRET_KEY: sk_test_mock
        POSTGRES_URL: postgres://test:test@localhost:5432/test
    
    - name: Check bundle size
      run: |
        npm run build
        npx next-bundle-analyzer || echo "Bundle analysis completed"